
DISTRO = "mng"
DISTRO_NAME = "Mercury Next Generation"
DISTRO_VERSION = "1.3"

TARGET_VENDOR = "-ofw"

SDK_VENDOR = "-ofwsdk"
SDK_VERSION := "${@'${DISTRO_VERSION}'.replace('snapshot-${DATE}','snapshot')}"
SDK_NAME = "${DISTRO}-${PRODUCT_NAME}-${TUNE_PKGARCH}"

# Ideally SDKPATH should not be set anymore, but for now keep
# setting it for backwards compatibility with OE 3.0 and earlier.
# See oe-core: 33a5714592 sdk: Decouple default install path from built in path

SDKPATH = "/opt/${DISTRO}/${PRODUCT_NAME}"
SDKPATHINSTALL = "/opt/${DISTRO}/${PRODUCT_NAME}"

PRODUCT_NAME ?= "${MACHINE}"

MAINTAINER = "Andre McCurdy <armccurdy@gmail.com>"

INCOMPATIBLE_LICENSE = "GPLv3.0 GPLv3 GPL-3.0 GPLv3+"
INCOMPATIBLE_LICENSE += "LGPLv3.0 LGPLv3 LGPL-3.0 LGPLv3+"
INCOMPATIBLE_LICENSE += "AGPLv3.0 AGPLv3 AGPL-3.0 AGPLv3+"

# Allow a few selected GPLv3 packages (for use in local debug builds only).
WHITELIST_GPL-3.0 = "gdb"

IMAGE_LINGUAS = ""
ENABLE_BINARY_LOCALE_GENERATION = "0"

# Temp workaround for warnings seen when building SDKs and toolchains.
INSANE_SKIP_glibc-locale = "installed-vs-shipped"

USE_NLS = "no"

MODULE_TARBALL_DEPLOY = "0"

KERNEL_PACKAGE_NAME = "kernel"

# Prevent kernel being included in rootfs images
RDEPENDS_${KERNEL_PACKAGE_NAME}-base = ""

TOOLCHAIN ?= "gcc"

TCLIBC ?= "glibc"

TCLIBCAPPEND = ""

INIT_MANAGER ?= "mdev-busybox"

QEMU_TARGETS = "arm armeb i386 x86_64"

MIRRORS_PRIVATE ?= ""

# ----------------------------------------------------------------------------

# Optimise for size by default, but platforms which don't have a problem with
# code size should over-ride by setting OPTIMIZE_DEFAULT to -O2 in their
# machine configs.

OPTIMIZE_DEFAULT ?= "-Os"

OPTIMIZE_DEFAULT_pn-bash = "-O2"
OPTIMIZE_DEFAULT_pn-glibc = "-O2"
OPTIMIZE_DEFAULT_pn-glibc-initial = "-O2"
OPTIMIZE_DEFAULT_pn-nativesdk-glibc = "-O2"
OPTIMIZE_DEFAULT_pn-nativesdk-glibc-initial = "-O2"
OPTIMIZE_DEFAULT_pn-musl = "-O2"
OPTIMIZE_DEFAULT_pn-openssl = "-O2"
OPTIMIZE_DEFAULT_pn-tinymembench = "-O2"

FULL_OPTIMIZATION = "${OPTIMIZE_DEFAULT} -pipe ${DEBUG_FLAGS}"

# ----------------------------------------------------------------------------

# By default, "version-going-backwards" is reported as an error.
# However we disable the test completely, since we don't care about package
# feeds and version numbers which differ only in their git revisions often do
# appear to go backwards.
ERROR_QA_remove = "version-going-backwards"
# WARN_QA_append = " version-going-backwards"

# ----------------------------------------------------------------------------

BB_DANGLINGAPPENDS_WARNONLY = "true"

# ----------------------------------------------------------------------------

DISTRO_FEATURES_BACKFILL_CONSIDERED = "pulseaudio bluez5 gobject-introspection-data ldconfig"

DISTRO_FEATURES_remove = "alsa bluetooth ext2 irda pcmcia usbgadget usbhost wifi nfs zeroconf 3g nfc x11 vfat"

# Before the ldconfig distro feature was added in OE 2.3, the same functionality
# was controlled via USE_LDCONFIG. Setting USE_LDCONFIG to 0 in OE 2.2 and earlier
# is equivalent to disabling the ldconfig distro feature in OE 2.3 and later.

USE_LDCONFIG = "0"

# Clear LDCONFIGDEPEND to avoid openembedded-core/meta/lib/oe/rootfs.py running
# ldconfig to create /etc/ld.so.cache as part of creating the rootfs. This should
# really be fixed upstream so that running ldconfig is controlled by the ldconfig
# distro feature, but until then we need to clear LDCONFIGDEPEND explicitly.

LDCONFIGDEPEND = ""

# ----------------------------------------------------------------------------

# gmp 4.2.1 is the last version released as LGPLv2
# nettle 2.7.1 is the last version released as LGPLv2
# gnutls 3.3.x is the last branch which supports nettle 2.7.1
PREFERRED_VERSION_gmp = "4.2.1"
PREFERRED_VERSION_nettle = "2.7.1"
PREFERRED_VERSION_gnutls = "3.3.%"

# Use gdb's bundled version of readline (avoids using the ancient version from meta-gplv2)
PACKAGECONFIG_remove_pn-gdb = "readline"

# ----------------------------------------------------------------------------

PREFERRED_VERSION_openssl ?= "1.1.%"

# ----------------------------------------------------------------------------

require include/mng-${TOOLCHAIN}.inc
require include/mng-${TCLIBC}.inc
require include/mng-security-flags.inc
require include/mng-sstate.inc
require include/mng-rdkb.inc

require include/init-manager-${INIT_MANAGER}.inc

# ----------------------------------------------------------------------------

MNG_VERSIONS ?= "local"

require include/mng-versions-${MNG_VERSIONS}.inc

# ----------------------------------------------------------------------------
